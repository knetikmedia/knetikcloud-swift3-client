//
// UtilMaintenanceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class UtilMaintenanceAPI: APIBase {
    /**
     Delete maintenance info
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteMaintenance(completion: @escaping ((_ error: Error?) -> Void)) {
        deleteMaintenanceWithRequestBuilder().execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Delete maintenance info
     - DELETE /maintenance
     - OAuth:
       - type: oauth2
       - name: knetik_oauth

     - returns: RequestBuilder<Void> 
     */
    open class func deleteMaintenanceWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/maintenance"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get current maintenance info
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getMaintenance(completion: @escaping ((_ data: Maintenance?,_ error: Error?) -> Void)) {
        getMaintenanceWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get current maintenance info
     - GET /maintenance
     - Get current maintenance info. 404 if no maintenance.
     - examples: [{contentType=application/json, example={
  "details" : "{}",
  "access_locked" : false,
  "message" : "aeiou"
}}]

     - returns: RequestBuilder<Maintenance> 
     */
    open class func getMaintenanceWithRequestBuilder() -> RequestBuilder<Maintenance> {
        let path = "/maintenance"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Maintenance>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Set current maintenance info
     
     - parameter maintenance: (body) The maintenance object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateMaintenance(maintenance: Maintenance? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        updateMaintenanceWithRequestBuilder(maintenance: maintenance).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Set current maintenance info
     - POST /maintenance
     - OAuth:
       - type: oauth2
       - name: knetik_oauth
     
     - parameter maintenance: (body) The maintenance object (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func updateMaintenanceWithRequestBuilder(maintenance: Maintenance? = nil) -> RequestBuilder<Void> {
        let path = "/maintenance"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = maintenance?.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Set current maintenance info
     
     - parameter maintenance: (body) The maintenance object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateMaintenance1(maintenance: Maintenance? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        updateMaintenance1WithRequestBuilder(maintenance: maintenance).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Set current maintenance info
     - PUT /maintenance
     - OAuth:
       - type: oauth2
       - name: knetik_oauth
     
     - parameter maintenance: (body) The maintenance object (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func updateMaintenance1WithRequestBuilder(maintenance: Maintenance? = nil) -> RequestBuilder<Void> {
        let path = "/maintenance"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = maintenance?.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
