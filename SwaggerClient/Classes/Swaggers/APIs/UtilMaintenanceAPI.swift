//
// UtilMaintenanceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class UtilMaintenanceAPI: APIBase {
    /**
     Remove maintenance info
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteUsingDELETE1(completion: @escaping ((_ error: Error?) -> Void)) {
        deleteUsingDELETE1WithRequestBuilder().execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Remove maintenance info
     - DELETE /maintenance

     - returns: RequestBuilder<Void> 
     */
    open class func deleteUsingDELETE1WithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/maintenance"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get current maintenance info
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUsingGET1(completion: @escaping ((_ data: Maintenance?,_ error: Error?) -> Void)) {
        getUsingGET1WithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get current maintenance info
     - GET /maintenance
     - Get current maintenance info. 404 if no maintenance.
     - examples: [{output=none}]

     - returns: RequestBuilder<Maintenance> 
     */
    open class func getUsingGET1WithRequestBuilder() -> RequestBuilder<Maintenance> {
        let path = "/maintenance"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Maintenance>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Set current maintenance info
     
     - parameter maintenance: (body) The Maintenance Object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsingPOST(maintenance: Maintenance? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        postUsingPOSTWithRequestBuilder(maintenance: maintenance).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Set current maintenance info
     - POST /maintenance
     
     - parameter maintenance: (body) The Maintenance Object (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func postUsingPOSTWithRequestBuilder(maintenance: Maintenance? = nil) -> RequestBuilder<Void> {
        let path = "/maintenance"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = maintenance?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Set current maintenance info
     
     - parameter maintenance: (body) The Maintenance Object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsingPUT(maintenance: Maintenance? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        postUsingPUTWithRequestBuilder(maintenance: maintenance).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Set current maintenance info
     - PUT /maintenance
     
     - parameter maintenance: (body) The Maintenance Object (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func postUsingPUTWithRequestBuilder(maintenance: Maintenance? = nil) -> RequestBuilder<Void> {
        let path = "/maintenance"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = maintenance?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
