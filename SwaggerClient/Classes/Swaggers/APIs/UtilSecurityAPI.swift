//
// UtilSecurityAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class UtilSecurityAPI: APIBase {
    /**
     Returns the authentication log for a user
     
     - parameter userId: (query) The user id (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUserLocationLogUsingGET(userId: Int32? = nil, completion: @escaping ((_ data: PageResourceLocationLogResource?,_ error: Error?) -> Void)) {
        getUserLocationLogUsingGETWithRequestBuilder(userId: userId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Returns the authentication log for a user
     - GET /security/country-log
     - A log entry is recorded everytime a user requests a new token. Standard pagination available
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example={
  "number" : 123,
  "last" : true,
  "size" : 123,
  "total_elements" : 123456789,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "aeiou",
    "property" : "aeiou",
    "ascending" : true,
    "direction" : "aeiou"
  } ],
  "total_pages" : 123,
  "number_of_elements" : 123,
  "content" : [ {
    "country" : "aeiou",
    "ip" : "aeiou",
    "time" : 123456789
  } ],
  "first" : true
}}]
     
     - parameter userId: (query) The user id (optional)

     - returns: RequestBuilder<PageResourceLocationLogResource> 
     */
    open class func getUserLocationLogUsingGETWithRequestBuilder(userId: Int32? = nil) -> RequestBuilder<PageResourceLocationLogResource> {
        let path = "/security/country-log"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [
            "user_id": userId?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceLocationLogResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Returns the authentication token details. Use /users endpoint for detailed user's info
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func userUsingGET(completion: @escaping ((_ data: TokenDetailsResource?,_ error: Error?) -> Void)) {
        userUsingGETWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Returns the authentication token details. Use /users endpoint for detailed user's info
     - GET /me
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example={
  "user_id" : 123,
  "roles" : [ "aeiou" ]
}}]

     - returns: RequestBuilder<TokenDetailsResource> 
     */
    open class func userUsingGETWithRequestBuilder() -> RequestBuilder<TokenDetailsResource> {
        let path = "/me"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TokenDetailsResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
