//
// DeviceResource.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class DeviceResource: JSONEncodable {
    public enum Condition: String { 
        case new = "New"
        case defective = "Defective"
        case reconditioned = "Reconditioned"
    }
    public enum Status: String { 
        case active = "Active"
        case pendingActive = "PendingActive"
        case inactive = "Inactive"
        case repair = "Repair"
    }
    /** The authorization code for the device */
    public var authorization: String?
    /** The current condition of the device (New, Defective, Reconditioned) */
    public var condition: Condition?
    /** The date the device log was created */
    public var createdDate: Int64?
    /** The key/value pairs for extended data */
    public var data: [String:String]?
    /** The description of the device */
    public var description: String?
    /** The type of the device */
    public var deviceType: String?
    /** The unique ID for this device. Cannot be changed once created */
    public var id: Int32?
    /** The location of the device */
    public var location: String?
    /** The MAC (media access control) address of the device */
    public var macAddress: String?
    /** The make of the device */
    public var make: String?
    /** The model of the device */
    public var model: String?
    /** The name of the device */
    public var name: String?
    /** The OS (operating system) on the device */
    public var os: String?
    /** The serial number of the device */
    public var serial: String?
    /** The current status the device (Active, Pending Active, Inactive, Repair */
    public var status: Status?
    /** The date the device log was updated */
    public var updatedDate: Int64?
    /** The user that owns the device */
    public var user: SimpleUserResource?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["authorization"] = self.authorization
        nillableDictionary["condition"] = self.condition?.rawValue
        nillableDictionary["created_date"] = self.createdDate?.encodeToJSON()
        nillableDictionary["data"] = self.data?.encodeToJSON()
        nillableDictionary["description"] = self.description
        nillableDictionary["device_type"] = self.deviceType
        nillableDictionary["id"] = self.id?.encodeToJSON()
        nillableDictionary["location"] = self.location
        nillableDictionary["mac_address"] = self.macAddress
        nillableDictionary["make"] = self.make
        nillableDictionary["model"] = self.model
        nillableDictionary["name"] = self.name
        nillableDictionary["os"] = self.os
        nillableDictionary["serial"] = self.serial
        nillableDictionary["status"] = self.status?.rawValue
        nillableDictionary["updated_date"] = self.updatedDate?.encodeToJSON()
        nillableDictionary["user"] = self.user?.encodeToJSON()
        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
