//
// StoreAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class StoreAPI: APIBase {
    /**
     Create an item template
     - parameter itemTemplateResource: (body) The new item template (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createItemTemplate(itemTemplateResource: StoreItemTemplateResource? = nil, completion: @escaping ((_ data: StoreItemTemplateResource?, _ error: ErrorResponse?) -> Void)) {
        createItemTemplateWithRequestBuilder(itemTemplateResource: itemTemplateResource).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Create an item template
     - POST /store/items/templates
     - Item Templates define a type of item and the properties they have.
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "behaviors" : [ {
    "behavior" : {
      "type_hint" : "type_hint",
      "description" : "description"
    },
    "modifiable" : false,
    "required" : false
  }, {
    "behavior" : {
      "type_hint" : "type_hint",
      "description" : "description"
    },
    "modifiable" : false,
    "required" : false
  } ],
  "name" : "name",
  "sku_template" : {
    "name" : "name",
    "created_date" : 0,
    "id" : "id",
    "updated_date" : 6,
    "properties" : [ {
      "name" : "name",
      "type" : "type",
      "field_list" : {
        "property_definition_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ],
        "property_type" : "property_type",
        "property_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ]
      },
      "required" : false
    }, {
      "name" : "name",
      "type" : "type",
      "field_list" : {
        "property_definition_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ],
        "property_type" : "property_type",
        "property_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ]
      },
      "required" : false
    } ]
  },
  "created_date" : 0,
  "id" : "id",
  "updated_date" : 6,
  "properties" : [ {
    "name" : "name",
    "type" : "type",
    "field_list" : {
      "property_definition_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ],
      "property_type" : "property_type",
      "property_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ]
    },
    "required" : false
  }, {
    "name" : "name",
    "type" : "type",
    "field_list" : {
      "property_definition_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ],
      "property_type" : "property_type",
      "property_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ]
    },
    "required" : false
  } ]
}}]
     - parameter itemTemplateResource: (body) The new item template (optional)
     - returns: RequestBuilder<StoreItemTemplateResource> 
     */
    open class func createItemTemplateWithRequestBuilder(itemTemplateResource: StoreItemTemplateResource? = nil) -> RequestBuilder<StoreItemTemplateResource> {
        let path = "/store/items/templates"
        let URLString = JSAPIAPI.basePath + path
        let parameters = itemTemplateResource?.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)

        let requestBuilder: RequestBuilder<StoreItemTemplateResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Create a store item
     - parameter cascade: (query) Whether to cascade group changes, such as in the limited gettable behavior. A 400 error will return otherwise if the group is already in use with different values. (optional, default to false)
     - parameter storeItem: (body) The store item object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createStoreItem(cascade: Bool? = nil, storeItem: StoreItem? = nil, completion: @escaping ((_ data: StoreItem?, _ error: ErrorResponse?) -> Void)) {
        createStoreItemWithRequestBuilder(cascade: cascade, storeItem: storeItem).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Create a store item
     - POST /store/items
     - SKUs have to be unique in the entire store. If a duplicate SKU is found, a 400 error is generated and the response will have a \"parameters\" field that is a list of duplicates. A duplicate is an object like {item_id, offending_sku_list}. Ex:<br /> {..., parameters: [[{item: 1, skus: [\"SKU-1\"]}]]}<br /> If an item is brand new and has duplicate SKUs within itself, the item ID will be 0.  Item subclasses are not allowed here, you will have to use their respective endpoints.
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example=""}]
     - parameter cascade: (query) Whether to cascade group changes, such as in the limited gettable behavior. A 400 error will return otherwise if the group is already in use with different values. (optional, default to false)
     - parameter storeItem: (body) The store item object (optional)
     - returns: RequestBuilder<StoreItem> 
     */
    open class func createStoreItemWithRequestBuilder(cascade: Bool? = nil, storeItem: StoreItem? = nil) -> RequestBuilder<StoreItem> {
        let path = "/store/items"
        let URLString = JSAPIAPI.basePath + path
        let parameters = storeItem?.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "cascade": cascade
        ])

        let requestBuilder: RequestBuilder<StoreItem>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Delete an item template
     - parameter id: (path) The id of the template 
     - parameter cascade: (query) force deleting the template if it&#39;s attached to other objects, cascade &#x3D; detach (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteItemTemplate(id: String, cascade: String? = nil, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        deleteItemTemplateWithRequestBuilder(id: id, cascade: cascade).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     Delete an item template
     - DELETE /store/items/templates/{id}
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - parameter id: (path) The id of the template 
     - parameter cascade: (query) force deleting the template if it&#39;s attached to other objects, cascade &#x3D; detach (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func deleteItemTemplateWithRequestBuilder(id: String, cascade: String? = nil) -> RequestBuilder<Void> {
        var path = "/store/items/templates/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = JSAPIAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "cascade": cascade
        ])

        let requestBuilder: RequestBuilder<Void>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Delete a store item
     - parameter id: (path) The id of the item 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteStoreItem(id: Int32, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        deleteStoreItemWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     Delete a store item
     - DELETE /store/items/{id}
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - parameter id: (path) The id of the item 
     - returns: RequestBuilder<Void> 
     */
    open class func deleteStoreItemWithRequestBuilder(id: Int32) -> RequestBuilder<Void> {
        var path = "/store/items/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = JSAPIAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     List available item behaviors
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getBehaviors(completion: @escaping ((_ data: [BehaviorDefinitionResource]?, _ error: ErrorResponse?) -> Void)) {
        getBehaviorsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     List available item behaviors
     - GET /store/items/behaviors
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example=[ {
  "prerequisite_behaviors" : [ {
    "type_hint" : "type_hint",
    "description" : "description"
  }, {
    "type_hint" : "type_hint",
    "description" : "description"
  } ],
  "type_hint" : "type_hint",
  "description" : "description",
  "properties" : [ {
    "inner_type" : "integer",
    "valid_values" : [ "valid_values", "valid_values" ],
    "name" : "name",
    "description" : "description",
    "type" : "integer",
    "inner_type_fields" : [ null, null ],
    "required" : false
  }, {
    "inner_type" : "integer",
    "valid_values" : [ "valid_values", "valid_values" ],
    "name" : "name",
    "description" : "description",
    "type" : "integer",
    "inner_type_fields" : [ null, null ],
    "required" : false
  } ]
}, {
  "prerequisite_behaviors" : [ {
    "type_hint" : "type_hint",
    "description" : "description"
  }, {
    "type_hint" : "type_hint",
    "description" : "description"
  } ],
  "type_hint" : "type_hint",
  "description" : "description",
  "properties" : [ {
    "inner_type" : "integer",
    "valid_values" : [ "valid_values", "valid_values" ],
    "name" : "name",
    "description" : "description",
    "type" : "integer",
    "inner_type_fields" : [ null, null ],
    "required" : false
  }, {
    "inner_type" : "integer",
    "valid_values" : [ "valid_values", "valid_values" ],
    "name" : "name",
    "description" : "description",
    "type" : "integer",
    "inner_type_fields" : [ null, null ],
    "required" : false
  } ]
} ]}]
     - returns: RequestBuilder<[BehaviorDefinitionResource]> 
     */
    open class func getBehaviorsWithRequestBuilder() -> RequestBuilder<[BehaviorDefinitionResource]> {
        let path = "/store/items/behaviors"
        let URLString = JSAPIAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[BehaviorDefinitionResource]>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get a single item template
     - parameter id: (path) The id of the template 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getItemTemplate(id: String, completion: @escaping ((_ data: StoreItemTemplateResource?, _ error: ErrorResponse?) -> Void)) {
        getItemTemplateWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get a single item template
     - GET /store/items/templates/{id}
     - Item Templates define a type of item and the properties they have.
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "behaviors" : [ {
    "behavior" : {
      "type_hint" : "type_hint",
      "description" : "description"
    },
    "modifiable" : false,
    "required" : false
  }, {
    "behavior" : {
      "type_hint" : "type_hint",
      "description" : "description"
    },
    "modifiable" : false,
    "required" : false
  } ],
  "name" : "name",
  "sku_template" : {
    "name" : "name",
    "created_date" : 0,
    "id" : "id",
    "updated_date" : 6,
    "properties" : [ {
      "name" : "name",
      "type" : "type",
      "field_list" : {
        "property_definition_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ],
        "property_type" : "property_type",
        "property_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ]
      },
      "required" : false
    }, {
      "name" : "name",
      "type" : "type",
      "field_list" : {
        "property_definition_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ],
        "property_type" : "property_type",
        "property_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ]
      },
      "required" : false
    } ]
  },
  "created_date" : 0,
  "id" : "id",
  "updated_date" : 6,
  "properties" : [ {
    "name" : "name",
    "type" : "type",
    "field_list" : {
      "property_definition_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ],
      "property_type" : "property_type",
      "property_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ]
    },
    "required" : false
  }, {
    "name" : "name",
    "type" : "type",
    "field_list" : {
      "property_definition_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ],
      "property_type" : "property_type",
      "property_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ]
    },
    "required" : false
  } ]
}}]
     - parameter id: (path) The id of the template 
     - returns: RequestBuilder<StoreItemTemplateResource> 
     */
    open class func getItemTemplateWithRequestBuilder(id: String) -> RequestBuilder<StoreItemTemplateResource> {
        var path = "/store/items/templates/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = JSAPIAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let requestBuilder: RequestBuilder<StoreItemTemplateResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     List and search item templates
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to id:ASC)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getItemTemplates(size: Int32? = nil, page: Int32? = nil, order: String? = nil, completion: @escaping ((_ data: PageResourceStoreItemTemplateResource?, _ error: ErrorResponse?) -> Void)) {
        getItemTemplatesWithRequestBuilder(size: size, page: page, order: order).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     List and search item templates
     - GET /store/items/templates
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "number" : 1,
  "last" : true,
  "size" : 5,
  "total_elements" : 2,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  }, {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  } ],
  "total_pages" : 7,
  "number_of_elements" : 5,
  "content" : [ {
    "behaviors" : [ {
      "behavior" : {
        "type_hint" : "type_hint",
        "description" : "description"
      },
      "modifiable" : false,
      "required" : false
    }, {
      "behavior" : {
        "type_hint" : "type_hint",
        "description" : "description"
      },
      "modifiable" : false,
      "required" : false
    } ],
    "name" : "name",
    "sku_template" : {
      "name" : "name",
      "created_date" : 0,
      "id" : "id",
      "updated_date" : 6,
      "properties" : [ {
        "name" : "name",
        "type" : "type",
        "field_list" : {
          "property_definition_fields" : [ {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          }, {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          } ],
          "property_type" : "property_type",
          "property_fields" : [ {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          }, {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          } ]
        },
        "required" : false
      }, {
        "name" : "name",
        "type" : "type",
        "field_list" : {
          "property_definition_fields" : [ {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          }, {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          } ],
          "property_type" : "property_type",
          "property_fields" : [ {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          }, {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          } ]
        },
        "required" : false
      } ]
    },
    "created_date" : 0,
    "id" : "id",
    "updated_date" : 6,
    "properties" : [ {
      "name" : "name",
      "type" : "type",
      "field_list" : {
        "property_definition_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ],
        "property_type" : "property_type",
        "property_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ]
      },
      "required" : false
    }, {
      "name" : "name",
      "type" : "type",
      "field_list" : {
        "property_definition_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ],
        "property_type" : "property_type",
        "property_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ]
      },
      "required" : false
    } ]
  }, {
    "behaviors" : [ {
      "behavior" : {
        "type_hint" : "type_hint",
        "description" : "description"
      },
      "modifiable" : false,
      "required" : false
    }, {
      "behavior" : {
        "type_hint" : "type_hint",
        "description" : "description"
      },
      "modifiable" : false,
      "required" : false
    } ],
    "name" : "name",
    "sku_template" : {
      "name" : "name",
      "created_date" : 0,
      "id" : "id",
      "updated_date" : 6,
      "properties" : [ {
        "name" : "name",
        "type" : "type",
        "field_list" : {
          "property_definition_fields" : [ {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          }, {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          } ],
          "property_type" : "property_type",
          "property_fields" : [ {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          }, {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          } ]
        },
        "required" : false
      }, {
        "name" : "name",
        "type" : "type",
        "field_list" : {
          "property_definition_fields" : [ {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          }, {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          } ],
          "property_type" : "property_type",
          "property_fields" : [ {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          }, {
            "inner_type" : "integer",
            "valid_values" : [ "valid_values", "valid_values" ],
            "name" : "name",
            "description" : "description",
            "type" : "integer",
            "inner_type_fields" : [ null, null ],
            "required" : false
          } ]
        },
        "required" : false
      } ]
    },
    "created_date" : 0,
    "id" : "id",
    "updated_date" : 6,
    "properties" : [ {
      "name" : "name",
      "type" : "type",
      "field_list" : {
        "property_definition_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ],
        "property_type" : "property_type",
        "property_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ]
      },
      "required" : false
    }, {
      "name" : "name",
      "type" : "type",
      "field_list" : {
        "property_definition_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ],
        "property_type" : "property_type",
        "property_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ]
      },
      "required" : false
    } ]
  } ],
  "first" : true
}}]
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to id:ASC)
     - returns: RequestBuilder<PageResourceStoreItemTemplateResource> 
     */
    open class func getItemTemplatesWithRequestBuilder(size: Int32? = nil, page: Int32? = nil, order: String? = nil) -> RequestBuilder<PageResourceStoreItemTemplateResource> {
        let path = "/store/items/templates"
        let URLString = JSAPIAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "size": size?.encodeToJSON(), 
            "page": page?.encodeToJSON(), 
            "order": order
        ])

        let requestBuilder: RequestBuilder<PageResourceStoreItemTemplateResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get a listing of store items
     - parameter limit: (query) The amount of items returned (optional)
     - parameter page: (query) The page of the request (optional)
     - parameter useCatalog: (query) Whether to remove items that are not intended for display or not in date (optional)
     - parameter ignoreLocation: (query) Whether to ignore country restrictions based on the caller&#39;s location (optional)
     - parameter inStockOnly: (query) Whether only in-stock items should be returned.  Default value is false (optional, default to false)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getStore(limit: Int32? = nil, page: Int32? = nil, useCatalog: Bool? = nil, ignoreLocation: Bool? = nil, inStockOnly: Bool? = nil, completion: @escaping ((_ data: PageResourceStoreItem?, _ error: ErrorResponse?) -> Void)) {
        getStoreWithRequestBuilder(limit: limit, page: page, useCatalog: useCatalog, ignoreLocation: ignoreLocation, inStockOnly: inStockOnly).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get a listing of store items
     - GET /store
     - The exact structure of each items may differ to include fields specific to the type. The same is true for behaviors.

     - examples: [{contentType=application/json, example={
  "number" : 0,
  "last" : true,
  "size" : 1,
  "total_elements" : 5,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  }, {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  } ],
  "total_pages" : 5,
  "number_of_elements" : 6,
  "content" : [ "", "" ],
  "first" : true
}}]
     - parameter limit: (query) The amount of items returned (optional)
     - parameter page: (query) The page of the request (optional)
     - parameter useCatalog: (query) Whether to remove items that are not intended for display or not in date (optional)
     - parameter ignoreLocation: (query) Whether to ignore country restrictions based on the caller&#39;s location (optional)
     - parameter inStockOnly: (query) Whether only in-stock items should be returned.  Default value is false (optional, default to false)
     - returns: RequestBuilder<PageResourceStoreItem> 
     */
    open class func getStoreWithRequestBuilder(limit: Int32? = nil, page: Int32? = nil, useCatalog: Bool? = nil, ignoreLocation: Bool? = nil, inStockOnly: Bool? = nil) -> RequestBuilder<PageResourceStoreItem> {
        let path = "/store"
        let URLString = JSAPIAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "limit": limit?.encodeToJSON(), 
            "page": page?.encodeToJSON(), 
            "use_catalog": useCatalog, 
            "ignore_location": ignoreLocation, 
            "in_stock_only": inStockOnly
        ])

        let requestBuilder: RequestBuilder<PageResourceStoreItem>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get a single store item
     - parameter id: (path) The id of the item 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getStoreItem(id: Int32, completion: @escaping ((_ data: StoreItem?, _ error: ErrorResponse?) -> Void)) {
        getStoreItemWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get a single store item
     - GET /store/items/{id}

     - examples: [{contentType=application/json, example=""}]
     - parameter id: (path) The id of the item 
     - returns: RequestBuilder<StoreItem> 
     */
    open class func getStoreItemWithRequestBuilder(id: Int32) -> RequestBuilder<StoreItem> {
        var path = "/store/items/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = JSAPIAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let requestBuilder: RequestBuilder<StoreItem>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     List and search store items
     - parameter filterNameSearch: (query) Filter for items whose name starts with a given string. (optional)
     - parameter filterUniqueKey: (query) Filter for items whose unique_key is a given string. (optional)
     - parameter filterPublished: (query) Filter for skus that have been published. (optional)
     - parameter filterDisplayable: (query) Filter for items that are displayable. (optional)
     - parameter filterStart: (query) A comma separated string without spaces.  First value is the operator to search on, second value is the store start date, a unix timestamp in seconds.  Allowed operators: (LT, GT, LTE, GTE, EQ). (optional)
     - parameter filterEnd: (query) A comma separated string without spaces.  First value is the operator to search on, second value is the store end date, a unix timestamp in seconds.  Allowed operators: (LT, GT, LTE, GTE, EQ). (optional)
     - parameter filterStartDate: (query) A comma separated string without spaces.  First value is the operator to search on, second value is the sku start date, a unix timestamp in seconds.  Allowed operators: (LT, GT, LTE, GTE, EQ). (optional)
     - parameter filterStopDate: (query) A comma separated string without spaces.  First value is the operator to search on, second value is the sku end date, a unix timestamp in seconds.  Allowed operators: (LT, GT, LTE, GTE, EQ). (optional)
     - parameter filterSku: (query) Filter for skus whose name starts with a given string. (optional)
     - parameter filterPrice: (query) A colon separated string without spaces.  First value is the operator to search on, second value is the price of a sku.  Allowed operators: (LT, GT, LTE, GTE, EQ). (optional)
     - parameter filterTag: (query) A comma separated list without spaces of the names of tags. Will only return items with at least one of the tags. (optional)
     - parameter filterItemsByType: (query) Filter for item type based on its type hint. (optional)
     - parameter filterBundledSkus: (query) Filter for skus inside bundles whose name starts with a given string.  Used only when type hint is &#39;bundle_item&#39; (optional)
     - parameter filterVendor: (query) Filter for items from a given vendor, by id. (optional)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to id:ASC)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getStoreItems(filterNameSearch: String? = nil, filterUniqueKey: String? = nil, filterPublished: Bool? = nil, filterDisplayable: Bool? = nil, filterStart: String? = nil, filterEnd: String? = nil, filterStartDate: String? = nil, filterStopDate: String? = nil, filterSku: String? = nil, filterPrice: String? = nil, filterTag: String? = nil, filterItemsByType: String? = nil, filterBundledSkus: String? = nil, filterVendor: Int32? = nil, size: Int32? = nil, page: Int32? = nil, order: String? = nil, completion: @escaping ((_ data: PageResourceStoreItem?, _ error: ErrorResponse?) -> Void)) {
        getStoreItemsWithRequestBuilder(filterNameSearch: filterNameSearch, filterUniqueKey: filterUniqueKey, filterPublished: filterPublished, filterDisplayable: filterDisplayable, filterStart: filterStart, filterEnd: filterEnd, filterStartDate: filterStartDate, filterStopDate: filterStopDate, filterSku: filterSku, filterPrice: filterPrice, filterTag: filterTag, filterItemsByType: filterItemsByType, filterBundledSkus: filterBundledSkus, filterVendor: filterVendor, size: size, page: page, order: order).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     List and search store items
     - GET /store/items

     - examples: [{contentType=application/json, example={
  "number" : 0,
  "last" : true,
  "size" : 1,
  "total_elements" : 5,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  }, {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  } ],
  "total_pages" : 5,
  "number_of_elements" : 6,
  "content" : [ "", "" ],
  "first" : true
}}]
     - parameter filterNameSearch: (query) Filter for items whose name starts with a given string. (optional)
     - parameter filterUniqueKey: (query) Filter for items whose unique_key is a given string. (optional)
     - parameter filterPublished: (query) Filter for skus that have been published. (optional)
     - parameter filterDisplayable: (query) Filter for items that are displayable. (optional)
     - parameter filterStart: (query) A comma separated string without spaces.  First value is the operator to search on, second value is the store start date, a unix timestamp in seconds.  Allowed operators: (LT, GT, LTE, GTE, EQ). (optional)
     - parameter filterEnd: (query) A comma separated string without spaces.  First value is the operator to search on, second value is the store end date, a unix timestamp in seconds.  Allowed operators: (LT, GT, LTE, GTE, EQ). (optional)
     - parameter filterStartDate: (query) A comma separated string without spaces.  First value is the operator to search on, second value is the sku start date, a unix timestamp in seconds.  Allowed operators: (LT, GT, LTE, GTE, EQ). (optional)
     - parameter filterStopDate: (query) A comma separated string without spaces.  First value is the operator to search on, second value is the sku end date, a unix timestamp in seconds.  Allowed operators: (LT, GT, LTE, GTE, EQ). (optional)
     - parameter filterSku: (query) Filter for skus whose name starts with a given string. (optional)
     - parameter filterPrice: (query) A colon separated string without spaces.  First value is the operator to search on, second value is the price of a sku.  Allowed operators: (LT, GT, LTE, GTE, EQ). (optional)
     - parameter filterTag: (query) A comma separated list without spaces of the names of tags. Will only return items with at least one of the tags. (optional)
     - parameter filterItemsByType: (query) Filter for item type based on its type hint. (optional)
     - parameter filterBundledSkus: (query) Filter for skus inside bundles whose name starts with a given string.  Used only when type hint is &#39;bundle_item&#39; (optional)
     - parameter filterVendor: (query) Filter for items from a given vendor, by id. (optional)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to id:ASC)
     - returns: RequestBuilder<PageResourceStoreItem> 
     */
    open class func getStoreItemsWithRequestBuilder(filterNameSearch: String? = nil, filterUniqueKey: String? = nil, filterPublished: Bool? = nil, filterDisplayable: Bool? = nil, filterStart: String? = nil, filterEnd: String? = nil, filterStartDate: String? = nil, filterStopDate: String? = nil, filterSku: String? = nil, filterPrice: String? = nil, filterTag: String? = nil, filterItemsByType: String? = nil, filterBundledSkus: String? = nil, filterVendor: Int32? = nil, size: Int32? = nil, page: Int32? = nil, order: String? = nil) -> RequestBuilder<PageResourceStoreItem> {
        let path = "/store/items"
        let URLString = JSAPIAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "filter_name_search": filterNameSearch, 
            "filter_unique_key": filterUniqueKey, 
            "filter_published": filterPublished, 
            "filter_displayable": filterDisplayable, 
            "filter_start": filterStart, 
            "filter_end": filterEnd, 
            "filter_start_date": filterStartDate, 
            "filter_stop_date": filterStopDate, 
            "filter_sku": filterSku, 
            "filter_price": filterPrice, 
            "filter_tag": filterTag, 
            "filter_items_by_type": filterItemsByType, 
            "filter_bundled_skus": filterBundledSkus, 
            "filter_vendor": filterVendor?.encodeToJSON(), 
            "size": size?.encodeToJSON(), 
            "page": page?.encodeToJSON(), 
            "order": order
        ])

        let requestBuilder: RequestBuilder<PageResourceStoreItem>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     One-step purchase and pay for a single SKU item from a user's wallet
     - parameter quickBuyRequest: (body) Quick buy details (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func quickBuy(quickBuyRequest: QuickBuyRequest? = nil, completion: @escaping ((_ data: InvoiceResource?, _ error: ErrorResponse?) -> Void)) {
        quickBuyWithRequestBuilder(quickBuyRequest: quickBuyRequest).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     One-step purchase and pay for a single SKU item from a user's wallet
     - POST /store/quick-buy
     - Used to create and automatically pay an invoice for a single unit of a single SKU from a user's wallet. SKU must be priced in virtual currency and must not be an item that requires shipping. PAYMENTS_ADMIN permission is required if user ID is specified and is not the ID of the currently logged in user. If invoice price does not match expected price, purchase is aborted
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "shipping_city_name" : "shipping_city_name",
  "order_notes" : "order_notes",
  "parent_invoice_id" : 1,
  "discount" : 6.027456183070403,
  "state_tax" : 4.965218492984954,
  "cart_id" : "cart_id",
  "name_prefix" : "name_prefix",
  "billing_postal_code" : "billing_postal_code",
  "shipping" : 7.457744773683766,
  "billing_state_name" : "billing_state_name",
  "billing_country_name" : "billing_country_name",
  "currency" : "currency",
  "current_fulfillment_status" : "current_fulfillment_status",
  "grand_total" : 5.962133916683182,
  "id" : 5,
  "current_payment_status" : "current_payment_status",
  "billing_address1" : "billing_address1",
  "invoice_number" : "invoice_number",
  "billing_address2" : "billing_address2",
  "email" : "email",
  "vendor_name" : "vendor_name",
  "billing_full_name" : "billing_full_name",
  "sort" : 1,
  "shipping_full_name" : "shipping_full_name",
  "fed_tax" : 1.4658129805029452,
  "payment_method_id" : 6,
  "phone" : "phone",
  "external_ref" : "external_ref",
  "shipping_address2" : "shipping_address2",
  "subtotal" : 5.025004791520295,
  "shipping_address1" : "shipping_address1",
  "vendor_id" : 9,
  "shipping_state_name" : "shipping_state_name",
  "billing_city_name" : "billing_city_name",
  "phone_number" : "phone_number",
  "created_date" : 0,
  "shipping_country_name" : "shipping_country_name",
  "updated_date" : 9,
  "items" : [ {
    "type_hint" : "type_hint",
    "total_price" : 1.2315135367772556,
    "item_id" : 9,
    "system_price" : 7.386281948385884,
    "item_name" : "item_name",
    "original_unit_price" : 2.027123023002322,
    "unit_price" : 1.0246457001441578,
    "qty" : 4,
    "invoice_id" : 7,
    "current_fulfillment_status" : "current_fulfillment_status",
    "id" : 2,
    "sale_name" : "sale_name",
    "bundle_sku" : "bundle_sku",
    "original_total_price" : 3.616076749251911,
    "sku" : "sku",
    "sku_description" : "sku_description"
  }, {
    "type_hint" : "type_hint",
    "total_price" : 1.2315135367772556,
    "item_id" : 9,
    "system_price" : 7.386281948385884,
    "item_name" : "item_name",
    "original_unit_price" : 2.027123023002322,
    "unit_price" : 1.0246457001441578,
    "qty" : 4,
    "invoice_id" : 7,
    "current_fulfillment_status" : "current_fulfillment_status",
    "id" : 2,
    "sale_name" : "sale_name",
    "bundle_sku" : "bundle_sku",
    "original_total_price" : 3.616076749251911,
    "sku" : "sku",
    "sku_description" : "sku_description"
  } ],
  "user" : {
    "avatar_url" : "avatar_url",
    "id" : 1,
    "display_name" : "display_name",
    "username" : "username"
  },
  "shipping_postal_code" : "shipping_postal_code"
}}]
     - parameter quickBuyRequest: (body) Quick buy details (optional)
     - returns: RequestBuilder<InvoiceResource> 
     */
    open class func quickBuyWithRequestBuilder(quickBuyRequest: QuickBuyRequest? = nil) -> RequestBuilder<InvoiceResource> {
        let path = "/store/quick-buy"
        let URLString = JSAPIAPI.basePath + path
        let parameters = quickBuyRequest?.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InvoiceResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Update an item template
     - parameter id: (path) The id of the template 
     - parameter itemTemplateResource: (body) The item template resource object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateItemTemplate(id: String, itemTemplateResource: StoreItemTemplateResource? = nil, completion: @escaping ((_ data: StoreItemTemplateResource?, _ error: ErrorResponse?) -> Void)) {
        updateItemTemplateWithRequestBuilder(id: id, itemTemplateResource: itemTemplateResource).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Update an item template
     - PUT /store/items/templates/{id}
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "behaviors" : [ {
    "behavior" : {
      "type_hint" : "type_hint",
      "description" : "description"
    },
    "modifiable" : false,
    "required" : false
  }, {
    "behavior" : {
      "type_hint" : "type_hint",
      "description" : "description"
    },
    "modifiable" : false,
    "required" : false
  } ],
  "name" : "name",
  "sku_template" : {
    "name" : "name",
    "created_date" : 0,
    "id" : "id",
    "updated_date" : 6,
    "properties" : [ {
      "name" : "name",
      "type" : "type",
      "field_list" : {
        "property_definition_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ],
        "property_type" : "property_type",
        "property_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ]
      },
      "required" : false
    }, {
      "name" : "name",
      "type" : "type",
      "field_list" : {
        "property_definition_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ],
        "property_type" : "property_type",
        "property_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ]
      },
      "required" : false
    } ]
  },
  "created_date" : 0,
  "id" : "id",
  "updated_date" : 6,
  "properties" : [ {
    "name" : "name",
    "type" : "type",
    "field_list" : {
      "property_definition_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ],
      "property_type" : "property_type",
      "property_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ]
    },
    "required" : false
  }, {
    "name" : "name",
    "type" : "type",
    "field_list" : {
      "property_definition_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ],
      "property_type" : "property_type",
      "property_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ]
    },
    "required" : false
  } ]
}}]
     - parameter id: (path) The id of the template 
     - parameter itemTemplateResource: (body) The item template resource object (optional)
     - returns: RequestBuilder<StoreItemTemplateResource> 
     */
    open class func updateItemTemplateWithRequestBuilder(id: String, itemTemplateResource: StoreItemTemplateResource? = nil) -> RequestBuilder<StoreItemTemplateResource> {
        var path = "/store/items/templates/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = JSAPIAPI.basePath + path
        let parameters = itemTemplateResource?.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)

        let requestBuilder: RequestBuilder<StoreItemTemplateResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Update a store item
     - parameter id: (path) The id of the item 
     - parameter cascade: (query) Whether to cascade group changes, such as in the limited gettable behavior. A 400 error will return otherwise if the group is already in use with different values. (optional, default to false)
     - parameter storeItem: (body) The store item object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateStoreItem(id: Int32, cascade: Bool? = nil, storeItem: StoreItem? = nil, completion: @escaping ((_ data: StoreItem?, _ error: ErrorResponse?) -> Void)) {
        updateStoreItemWithRequestBuilder(id: id, cascade: cascade, storeItem: storeItem).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Update a store item
     - PUT /store/items/{id}
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example=""}]
     - parameter id: (path) The id of the item 
     - parameter cascade: (query) Whether to cascade group changes, such as in the limited gettable behavior. A 400 error will return otherwise if the group is already in use with different values. (optional, default to false)
     - parameter storeItem: (body) The store item object (optional)
     - returns: RequestBuilder<StoreItem> 
     */
    open class func updateStoreItemWithRequestBuilder(id: Int32, cascade: Bool? = nil, storeItem: StoreItem? = nil) -> RequestBuilder<StoreItem> {
        var path = "/store/items/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = JSAPIAPI.basePath + path
        let parameters = storeItem?.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "cascade": cascade
        ])

        let requestBuilder: RequestBuilder<StoreItem>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
