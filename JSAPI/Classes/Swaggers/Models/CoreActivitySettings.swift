//
// CoreActivitySettings.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class CoreActivitySettings: JSONEncodable {

    public enum HostOption: String { 
        case adminOnly = "admin_only"
        case player = "player"
        case nonPlayer = "non_player"
    }
    public enum ResultsTrust: String { 
        case _none = "none"
        case host = "host"
        case all = "all"
    }
    /** Whether the host can boot a user while the status is PLAYING. Default false */
    public var bootInPlay: Bool?
    /** Restriction for whether the host creating an occurrence can specify a custom launch address (such as their own ip address). Default &#39;false&#39; */
    public var customLaunchAddressAllowed: Bool?
    /** Restriction for who can host an occurrence. admin disallows regular users, player means the user must also be a player in the occurrence if not admin, non-player means the user has the option to host without being a player. Default &#39;player&#39; */
    public var hostOption: HostOption?
    /** Restriction for whether the host has control of the status once the game launches. If false they can only manage the game before (when setup and open). Default &#39;false&#39; */
    public var hostStatusControl: Bool?
    /** Whether users can join while the status is PLAYING. Default false */
    public var joinInPlay: Bool?
    /** Whether users can leave while the status is PLAYING. Default false */
    public var leaveInPlay: Bool?
    /** The maximum number of players the game can hold */
    public var maxPlayers: Int32?
    /** The minimum number of players the game can hold */
    public var minPlayers: Int32?
    /** Restriction for who is able to report game end and results. Admin is always able to send results as well. Default &#39;none&#39; */
    public var resultsTrust: ResultsTrust?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["boot_in_play"] = self.bootInPlay
        nillableDictionary["custom_launch_address_allowed"] = self.customLaunchAddressAllowed
        nillableDictionary["host_option"] = self.hostOption?.rawValue
        nillableDictionary["host_status_control"] = self.hostStatusControl
        nillableDictionary["join_in_play"] = self.joinInPlay
        nillableDictionary["leave_in_play"] = self.leaveInPlay
        nillableDictionary["max_players"] = self.maxPlayers?.encodeToJSON()
        nillableDictionary["min_players"] = self.minPlayers?.encodeToJSON()
        nillableDictionary["results_trust"] = self.resultsTrust?.rawValue

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
