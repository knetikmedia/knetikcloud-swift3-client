//
// BreRule.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class BreRule: JSONEncodable {

    /** A list of actions to execute, and the mapping for their parameters, when the rule runs. Minimum 1 */
    public var actions: ActionResource?
    /** A condition expression that must be met in a given event for the rule to run. Empty to always run */
    public var condition: PredicateOperation?
    /** The condition as a readable string. Filled in by the system from the condition */
    public var conditionText: String?
    /** The human readable description of the rule */
    public var description: String?
    /** Whether the rule is enabled to run (in conjunction with dates). Default true */
    public var enabled: Bool?
    /** The date the rule ceases to take effect, or null if never. Unix timestamp in seconds */
    public var endDate: Int64?
    /** The event name of the trigger this rule runs for. Affects which parameters are available */
    public var eventName: String?
    /** The id of the rule for later references. If left null a random guid will be generated. Must be unique. Cannot be changed */
    public var id: String?
    /** The human readable name of the rule */
    public var name: String?
    /** Used to sort rules to control the order they run in. Larger numbered sort values run first.  Default 500 */
    public var sort: Int32?
    /** The date the rule begins to take effect, or null if always. Unix timestamp in seconds */
    public var startDate: Int64?
    /** Whether the rule is a default part of the system. System rules cannot be edited or deleted, but may be disabled */
    public var systemRule: Bool?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["actions"] = self.actions?.encodeToJSON()
        nillableDictionary["condition"] = self.condition?.encodeToJSON()
        nillableDictionary["condition_text"] = self.conditionText
        nillableDictionary["description"] = self.description
        nillableDictionary["enabled"] = self.enabled
        nillableDictionary["end_date"] = self.endDate?.encodeToJSON()
        nillableDictionary["event_name"] = self.eventName
        nillableDictionary["id"] = self.id
        nillableDictionary["name"] = self.name
        nillableDictionary["sort"] = self.sort?.encodeToJSON()
        nillableDictionary["start_date"] = self.startDate?.encodeToJSON()
        nillableDictionary["system_rule"] = self.systemRule

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
