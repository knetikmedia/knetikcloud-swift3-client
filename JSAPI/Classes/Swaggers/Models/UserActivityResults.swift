//
// UserActivityResults.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class UserActivityResults: JSONEncodable {

    /** Any currency rewarded to this user */
    public var currencyRewards: [RewardCurrencyResource]?
    /** Any items rewarded to this user */
    public var itemRewards: [RewardItemResource]?
    /** The position of the user in the leaderboard. Null means non-compete or disqualification */
    public var rank: Int64?
    /** The raw score in this leaderboard. Null means non-compete or disqualification */
    public var score: Int64?
    /** Any tags for the metric. Each unique tag will translate into a unique leaderboard. Maximum 5 tags and 50 characters each */
    public var tags: [String]?
    /** The number of users tied at this rank, including this user. 1 means no tie */
    public var ties: Int32?
    /** The date this score was recorded or updated. Unix timestamp in seconds */
    public var updatedDate: Int64?
    /** The player for this entry */
    public var user: SimpleUserResource?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["currency_rewards"] = self.currencyRewards?.encodeToJSON()
        nillableDictionary["item_rewards"] = self.itemRewards?.encodeToJSON()
        nillableDictionary["rank"] = self.rank?.encodeToJSON()
        nillableDictionary["score"] = self.score?.encodeToJSON()
        nillableDictionary["tags"] = self.tags?.encodeToJSON()
        nillableDictionary["ties"] = self.ties?.encodeToJSON()
        nillableDictionary["updated_date"] = self.updatedDate?.encodeToJSON()
        nillableDictionary["user"] = self.user?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
