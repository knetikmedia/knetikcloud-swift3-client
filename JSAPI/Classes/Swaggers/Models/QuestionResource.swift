//
// QuestionResource.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class QuestionResource: JSONEncodable {
    /** A map of additional properties, keyed on the property name.  Must match the names and types defined in the template for this item type */
    public var additionalProperties: [String:Property]?
    /** The list of available answers */
    public var answers: [AnswerResource]?
    /** The category for the question */
    public var category: NestedCategory?
    /** The date/time this resource was created in seconds since unix epoch */
    public var createdDate: Int64?
    /** The difficulty of the question */
    public var difficulty: Int32?
    /** The unique ID for that resource */
    public var id: String?
    /** The id of the import job that created the question, or null if not from an import */
    public var importId: Int64?
    /** When the question becomes available, null for never, in seconds since epoch */
    public var publishedDate: Int64?
    /** The question. Different &#39;type&#39; values indicate different structures as the question may be test, image, etc. See information on additional properties for the list and their structures */
    public var question: Property?
    /** The first source of the question */
    public var source1: String?
    /** The second source of the question */
    public var source2: String?
    /** The list of tags */
    public var tags: [String]?
    /** A question template this question is validated against (private). May be null and no validation of additional_properties will be done */
    public var template: String?
    /** The date/time this resource was last updated in seconds since unix epoch */
    public var updatedDate: Int64?
    /** The supplier of the question */
    public var vendor: String?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["additional_properties"] = self.additionalProperties?.encodeToJSON()
        nillableDictionary["answers"] = self.answers?.encodeToJSON()
        nillableDictionary["category"] = self.category?.encodeToJSON()
        nillableDictionary["created_date"] = self.createdDate?.encodeToJSON()
        nillableDictionary["difficulty"] = self.difficulty?.encodeToJSON()
        nillableDictionary["id"] = self.id
        nillableDictionary["import_id"] = self.importId?.encodeToJSON()
        nillableDictionary["published_date"] = self.publishedDate?.encodeToJSON()
        nillableDictionary["question"] = self.question?.encodeToJSON()
        nillableDictionary["source1"] = self.source1
        nillableDictionary["source2"] = self.source2
        nillableDictionary["tags"] = self.tags?.encodeToJSON()
        nillableDictionary["template"] = self.template
        nillableDictionary["updated_date"] = self.updatedDate?.encodeToJSON()
        nillableDictionary["vendor"] = self.vendor
        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
