//
// BreGlobalResource.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class BreGlobalResource: JSONEncodable {
    /** A human readable description for display in admin pages */
    public var description: String?
    /** The id of the global definition. Default is a random guid. Cannot be updated */
    public var id: String?
    /** The key for the global. Must be unique when combined with scope names. Usually a single descriptive word like &#39;purchases&#39; or &#39;logins&#39; */
    public var key: String?
    /** A human readable name for display in admin pages */
    public var name: String?
    /** A list of scoping parameters. Allows the global to have a different value in different context such as a count of purchases for each user (by putting a &#39;user&#39; scope in this list). When using this global in a rule these scopes will need to be mapped with an expression to provide a value, similar to the parameters in an action */
    public var scopes: [BreGlobalScopeDefinition]?
    /** Where this global came from. System globals cannot be removed or updated */
    public var systemGlobal: Bool?
    /** The variable type the global stores. See the See Bre Variables enpoint for list */
    public var type: String?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["description"] = self.description
        nillableDictionary["id"] = self.id
        nillableDictionary["key"] = self.key
        nillableDictionary["name"] = self.name
        nillableDictionary["scopes"] = self.scopes?.encodeToJSON()
        nillableDictionary["system_global"] = self.systemGlobal
        nillableDictionary["type"] = self.type
        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
