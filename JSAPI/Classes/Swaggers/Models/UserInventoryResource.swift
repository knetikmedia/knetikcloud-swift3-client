//
// UserInventoryResource.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class UserInventoryResource: JSONEncodable {

    public enum Status: String { 
        case pending = "pending"
        case active = "active"
        case inactive = "inactive"
    }
    /** A map of data for behaviors */
    public var behaviorData: Any?
    /** The date/time this resource was created in seconds since epoch */
    public var createdDate: Int64?
    /** The date/time this resource exires in seconds since epoch. Null for no expiration. For subscriptions, this is the end of the &#39;grace period&#39; if left unpaid */
    public var expires: Int64?
    /** The id of the inventory */
    public var id: Int32?
    /** The id of the invoice that resulted in this inventory, if any */
    public var invoiceId: Int32?
    /** The id of the item */
    public var itemId: Int32?
    /** The name of the item */
    public var itemName: String?
    /** The type hint of the item */
    public var itemTypeHint: String?
    /** The status of the inventory. Pending inventory is not yet ready for use. Inactive inventory has expired or been used up */
    public var status: Status?
    /** The date/time this resource was last updated in seconds since epoch */
    public var updatedDate: Int64?
    /** The id of the user this inventory belongs to */
    public var user: SimpleUserResource?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["behavior_data"] = self.behaviorData
        nillableDictionary["created_date"] = self.createdDate?.encodeToJSON()
        nillableDictionary["expires"] = self.expires?.encodeToJSON()
        nillableDictionary["id"] = self.id?.encodeToJSON()
        nillableDictionary["invoice_id"] = self.invoiceId?.encodeToJSON()
        nillableDictionary["item_id"] = self.itemId?.encodeToJSON()
        nillableDictionary["item_name"] = self.itemName
        nillableDictionary["item_type_hint"] = self.itemTypeHint
        nillableDictionary["status"] = self.status?.rawValue
        nillableDictionary["updated_date"] = self.updatedDate?.encodeToJSON()
        nillableDictionary["user"] = self.user?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
