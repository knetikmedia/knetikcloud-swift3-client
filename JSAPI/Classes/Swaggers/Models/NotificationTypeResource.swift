//
// NotificationTypeResource.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class NotificationTypeResource: JSONEncodable {

    /** The date the type was created, as a unix timestamp in seconds */
    public var createdDate: Int64?
    /** Whether the email body should be resolved. If true, the external email delivery system will be expected to handle the templating (Mandrill/Mailchimp). default: false */
    public var emailBodyTemplateExternal: Bool?
    /** The id of a message template to resolve the email body. If null, no websocket message wil be sent */
    public var emailBodyTemplateId: String?
    /** The id of a message template to resolve the email subject. If null, no websocket message wil be sent */
    public var emailSubjectTemplateId: String?
    /** The id of the notification type. Default: random */
    public var id: String?
    /** The name of the notification type */
    public var name: String?
    /** The id of a message template to resolve the SMS message. If null, no sms message wil be sent */
    public var smsTemplateId: String?
    /** The date the type was last updated, as a unix timestamp in seconds */
    public var updatedDate: Int64?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["created_date"] = self.createdDate?.encodeToJSON()
        nillableDictionary["email_body_template_external"] = self.emailBodyTemplateExternal
        nillableDictionary["email_body_template_id"] = self.emailBodyTemplateId
        nillableDictionary["email_subject_template_id"] = self.emailSubjectTemplateId
        nillableDictionary["id"] = self.id
        nillableDictionary["name"] = self.name
        nillableDictionary["sms_template_id"] = self.smsTemplateId
        nillableDictionary["updated_date"] = self.updatedDate?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
