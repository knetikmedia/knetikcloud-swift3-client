//
// UserNotificationResource.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class UserNotificationResource: JSONEncodable {

    public enum RecipientType: String { 
        case user = "user"
        case topic = "topic"
    }
    public enum Status: String { 
        case pending = "pending"
        case read = "read"
        case hidden = "hidden"
    }
    /** The data to send and fill templates */
    public var data: Any?
    /** The id of the notification */
    public var notificationId: String?
    /** The id of the notification type */
    public var notificationTypeId: String?
    /** The id of the recipient, dependent on the recipient_type. The user&#39;s id or the topic&#39;s id */
    public var recipient: String?
    /** The type of recipient for the notification. Either a user, or all users in a topic */
    public var recipientType: RecipientType?
    /** The date this notification was first retrieved */
    public var retrieveDate: Int64?
    /** The date this notification was sent */
    public var sendDate: Int64?
    /** The user&#39;s status for this notification */
    public var status: Status?
    /** The id of the user */
    public var userId: Int32?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["data"] = self.data
        nillableDictionary["notification_id"] = self.notificationId
        nillableDictionary["notification_type_id"] = self.notificationTypeId
        nillableDictionary["recipient"] = self.recipient
        nillableDictionary["recipient_type"] = self.recipientType?.rawValue
        nillableDictionary["retrieve_date"] = self.retrieveDate?.encodeToJSON()
        nillableDictionary["send_date"] = self.sendDate?.encodeToJSON()
        nillableDictionary["status"] = self.status?.rawValue
        nillableDictionary["user_id"] = self.userId?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
