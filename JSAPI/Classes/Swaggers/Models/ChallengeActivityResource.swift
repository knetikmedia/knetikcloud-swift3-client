//
// ChallengeActivityResource.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class ChallengeActivityResource: JSONEncodable {

    /** The id of the activity */
    public var activityId: Int64?
    /** A map of additional properties, keyed on the property name.  Must match the names and types defined in the template for this item type */
    public var additionalProperties: [String:Property]?
    /** The id of the challenge */
    public var challengeId: Int64?
    /** Defines core settings about the activity that affect how it can be created/played by users. Values may be left null to inherit from parent activity. */
    public var coreSettings: CoreChallengeActivitySettings?
    /** The entitlement item needed to participate in the activity as part of this event. Null indicates free entry. When creating/updating only id is used. Item must be pre-existing */
    public var entitlement: ActivityEntitlementResource?
    /** The unique ID for this resource */
    public var id: Int64?
    /** The rewards to give at the end of each occurence of the activity. When creating/updating only id is used. Reward set must be pre-existing */
    public var rewardSet: RewardSetResource?
    /** The list of settings and the select options */
    public var settings: [SelectedSettingResource]?
    /** A challenge activity template this challenge activity is validated against (private). May be null and no validation of additional_properties will be done */
    public var template: String?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["activity_id"] = self.activityId?.encodeToJSON()
        nillableDictionary["additional_properties"] = self.additionalProperties?.encodeToJSON()
        nillableDictionary["challenge_id"] = self.challengeId?.encodeToJSON()
        nillableDictionary["core_settings"] = self.coreSettings?.encodeToJSON()
        nillableDictionary["entitlement"] = self.entitlement?.encodeToJSON()
        nillableDictionary["id"] = self.id?.encodeToJSON()
        nillableDictionary["reward_set"] = self.rewardSet?.encodeToJSON()
        nillableDictionary["settings"] = self.settings?.encodeToJSON()
        nillableDictionary["template"] = self.template

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
