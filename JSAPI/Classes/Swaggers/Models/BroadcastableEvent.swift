//
// BroadcastableEvent.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class BroadcastableEvent: JSONEncodable {

    public var client: String?
    public var customer: String?
    public var doNotBroadcast: Bool?
    public var section: String?
    public var source: Any?
    public var specifics: String?
    public var synchronous: Bool?
    public var timestamp: Int64?
    /** The type of the event. Used for polymorphic type recognition and thus must match an expected type */
    public var type: String?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["client"] = self.client
        nillableDictionary["customer"] = self.customer
        nillableDictionary["do_not_broadcast"] = self.doNotBroadcast
        nillableDictionary["section"] = self.section
        nillableDictionary["source"] = self.source
        nillableDictionary["specifics"] = self.specifics
        nillableDictionary["synchronous"] = self.synchronous
        nillableDictionary["timestamp"] = self.timestamp?.encodeToJSON()
        nillableDictionary["type"] = self.type

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
